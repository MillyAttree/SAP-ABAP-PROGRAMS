*&---------------------------------------------------------------------*
*& Report  Y37_THREE_TABLE_BILLING
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Y37_THREE_TABLE_BILLING NO STANDARD PAGE HEADING LINE-COUNT 300 LINE-SIZE 300 MESSAGE-ID zrv.

TABLES: VBRK, VBRP, MARA.

TYPES: BEGIN OF TY_VBRK,
       VBELN TYPE VBELN_VF,
       FKART TYPE FKART,
       FKDAT TYPE FKDAT,
       END OF TY_VBRK.


DATA: IT_VBRK TYPE STANDARD TABLE OF TY_VBRK,
      WA_VBRK TYPE TY_VBRK.

TYPES: BEGIN OF TY_VBRP,
       VBELN TYPE VBELN_VF,
       POSNR TYPE POSNR_VF,
       FKLMG TYPE FKLMG,
       MATNR TYPE MATNR,
       END OF TY_VBRP.


DATA: IT_VBRP TYPE STANDARD TABLE OF TY_VBRP,
      WA_VBRP TYPE TY_VBRP.

TYPES: BEGIN OF TY_MARA,
       MATNR TYPE MATNR,
       MTART TYPE MTART,
       END OF TY_MARA.

DATA: IT_MARA TYPE STANDARD TABLE OF TY_MARA,
      WA_MARA TYPE TY_MARA.

TYPES: BEGIN OF TY_FINAL,
       VBELN TYPE VBELN_VF,
       FKART TYPE FKART,
       FKDAT TYPE FKDAT,
       POSNR TYPE POSNR_VF,
       FKLMG TYPE FKLMG,
       MATNR TYPE MATNR,
       MTART TYPE MTART,
       END OF TY_FINAL.

DATA: IT_FINAL TYPE STANDARD TABLE OF TY_FINAL,
      WA_FINAL TYPE TY_FINAL.

DATA: P_VBELN TYPE VBELN_VF,
      P_FKART TYPE FKART,
      P_FKLMG TYPE FKLMG,
      P_MATNR TYPE MATNR.

INITIALIZATION.

SELECTION-SCREEN BEGIN OF BLOCK B1 WITH FRAME TITLE TEXT-001.
  SELECT-OPTIONS: S_VBELN FOR VBRK-VBELN,
                  S_FKART FOR VBRK-FKART,
                  S_FKLMG FOR VBRP-FKLMG,
                  S_MATNR FOR VBRP-MATNR.

SELECTION-SCREEN END OF BLOCK B1.

AT SELECTION-SCREEN.

  IF S_VBELN AND S_FKART AND S_FKLMG AND S_MATNR IS INITIAL.
      MESSAGE 'PLEASE FILL ANY PARAMETERS' TYPE 'E'.
  ENDIF.

IF S_VBELN IS NOT INITIAL.
    SELECT SINGLE VBELN FROM VBRK INTO P_VBELN WHERE VBELN IN S_VBELN.
      IF SY-SUBRC NE 0.
         MESSAGE 'INCORRECT BILL NO' TYPE 'I'.
      ENDIF.
ENDIF.


IF S_FKART IS NOT INITIAL.
    SELECT SINGLE FKART FROM VBRK INTO P_FKART WHERE FKART IN S_FKART.
      IF SY-SUBRC NE 0.
         MESSAGE 'INCORRECT BILL TYPE' TYPE 'I'.
      ENDIF.
ENDIF.


IF S_FKLMG IS NOT INITIAL.
    SELECT SINGLE FKLMG FROM VBRP INTO P_FKLMG WHERE FKLMG IN S_FKLMG.
      IF SY-SUBRC NE 0.
         MESSAGE 'INCORRECT BILL QVANTITY' TYPE 'I'.
      ENDIF.
ENDIF.

IF S_MATNR IS NOT INITIAL.
    SELECT SINGLE MATNR FROM MARA INTO P_MATNR WHERE MATNR IN S_MATNR.
      IF SY-SUBRC NE 0.
         MESSAGE 'INCORRECT MATERIAL NO' TYPE 'I'.
      ENDIF.
ENDIF.



TOP-OF-PAGE.
WRITE:/25 'DATA FROM TABLE VBRK & VBRP & MARA'.
SKIP.
WRITE:/1 'BILL NO',
       20 'BILL TYPE',
       40 'BILL DATE',
       60 'BILL ITEM',
       80 'BILL QVANTITY',
       100 'MATERIAL NO',
       120 'MATERIAL TYPE'.

START-OF-SELECTION.

SELECT VBELN FKART FKDAT FROM VBRK INTO TABLE IT_VBRK WHERE VBELN IN S_VBELN
                                                       AND FKART IN S_FKART.
  IF SY-SUBRC EQ 0.
     SORT IT_VBRK BY VBELN.
  ENDIF.

IF IT_VBRK IS NOT INITIAL.
    SELECT VBELN POSNR FKLMG MATNR FROM VBRP INTO TABLE IT_VBRP FOR ALL ENTRIES IN IT_VBRK
                                                        WHERE VBELN = IT_VBRK-VBELN
                                                        AND FKLMG IN S_FKLMG
                                                            AND MATNR IN S_MATNR.
 IF SY-SUBRC EQ 0.
    SORT IT_VBRP BY VBELN.
 ENDIF.
ENDIF.


IF IT_VBRP IS NOT INITIAL.
    SELECT MATNR MTART FROM MARA INTO TABLE IT_MARA FOR ALL ENTRIES IN IT_VBRP
                                                        WHERE MATNR = IT_VBRP-MATNR
                                                    .
 IF SY-SUBRC EQ 0.
    SORT IT_MARA BY MATNR.
 ENDIF.
ENDIF.

*SORT IT_VBRP BY MATNR.
*SORT IT_MARA BY MATNR.


LOOP AT IT_VBRP INTO WA_VBRP.
  WA_FINAL-VBELN = WA_VBRP-VBELN.
  WA_FINAL-POSNR = WA_VBRP-POSNR.
  WA_FINAL-FKLMG = WA_VBRP-FKLMG.
  WA_FINAL-MATNR = WA_VBRP-MATNR.
  CLEAR WA_VBRK.

  READ TABLE IT_VBRK INTO WA_VBRK WITH KEY VBELN = WA_VBRP-VBELN.
  IF SY-SUBRC EQ 0.
   WA_FINAL-FKART = WA_VBRK-FKART.
   WA_FINAL-FKDAT = WA_VBRK-FKDAT.
  ENDIF.
  CLEAR WA_MARA.

   READ TABLE IT_MARA INTO WA_MARA WITH KEY MATNR = WA_VBRP-MATNR.
   IF SY-SUBRC EQ 0.
    WA_FINAL-MTART = WA_MARA-MTART.
   ENDIF.
   APPEND WA_FINAL TO IT_FINAL.
   CLEAR WA_FINAL.

ENDLOOP.


LOOP AT IT_FINAL INTO WA_FINAL.
  WRITE:/1 WA_FINAL-VBELN,
         20 WA_FINAL-FKART,
         40 WA_FINAL-FKDAT,
         60 WA_FINAL-POSNR,
         80 WA_FINAL-FKLMG,
         100 WA_FINAL-MATNR,
         120 WA_FINAL-MTART.
  ENDLOOP.