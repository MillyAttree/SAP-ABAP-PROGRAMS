*&---------------------------------------------------------------------*
*& Report  Y37_MULTIPLE_SELECT_OPTIONS
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Y37_MULTIPLE_SELECT_OPTIONS NO STANDARD PAGE HEADING LINE-COUNT 100(10) LINE-SIZE 300 MESSAGE-ID ZRV.


TABLES: MARA, MARC , EKPO.

TYPES: BEGIN OF TY_MARA,
       MATNR TYPE MATNR,
       ERSDA TYPE ERSDA,
       MTART TYPE MTART,
       END OF TY_MARA.


DATA: IT_MARA TYPE STANDARD TABLE OF TY_MARA,
      WA_MARA TYPE TY_MARA.


TYPES: BEGIN OF TY_MARC,
       MATNR TYPE MATNR,
       WERKS TYPE WERKS,
       END OF TY_MARC.


DATA: IT_MARC TYPE STANDARD TABLE OF TY_MARC,
      WA_MARC TYPE TY_MARC.

TYPES: BEGIN OF TY_EKPO,
       EBELN TYPE EBELN,           " PURCHASE NO.
       MATNR TYPE MATNR,
         END OF TY_EKPO.

DATA: IT_EKPO TYPE STANDARD TABLE OF TY_EKPO,
      WA_EKPO TYPE TY_EKPO.

TYPES: BEGIN OF TY_FIN,
       MATNR TYPE MATNR,
       ERSDA TYPE ERSDA,
       MTART TYPE MTART,
       WERKS TYPE WERKS,
       EBELN TYPE EBELN,           " PURCHASE NO.
*       WAERS TYPE WAERS,           " CURRENCY
       END OF TY_FIN.



DATA: IT_FIN TYPE STANDARD TABLE OF TY_FIN,
      WA_FIN TYPE TY_FIN.

INITIALIZATION.


  SELECTION-SCREEN BEGIN OF BLOCK B1 WITH FRAME TITLE TEXT-001.

  SELECT-OPTIONS: S_MATNR FOR MARA-MATNR,
                  S_WERKS FOR MARC-WERKS,
                  S_EBELN FOR EKPO-EBELN.
  SELECTION-SCREEN END OF BLOCK B1.

AT SELECTION-SCREEN.

  IF S_MATNR AND S_WERKS AND S_EBELN IS INITIAL.
    MESSAGE 'PLEASE FILL ANY PARAMETER' TYPE 'E'.
  ENDIF.

START-OF-SELECTION.

  IF S_WERKS IS INITIAL.

    SELECT MATNR ERSDA MTART FROM MARA INTO TABLE IT_MARA WHERE MATNR IN S_MATNR .   "AND S_EBELN IN S_EBELN.
    IF SY-SUBRC EQ 0.
      SORT IT_MARA BY MATNR.
    ENDIF.

    IF IT_MARA[] IS NOT INITIAL.
      SELECT MATNR WERKS FROM MARC INTO TABLE IT_MARC FOR ALL ENTRIES IN IT_MARA WHERE MATNR = IT_MARA-MATNR.
     IF SY-SUBRC EQ 0.
      SORT IT_MARC BY MATNR.
     ENDIF.
     ENDIF.

      IF IT_MARC[] IS NOT  INITIAL.
      SELECT  EBELN MATNR FROM EKPO INTO TABLE IT_EKPO FOR ALL ENTRIES IN IT_MARC WHERE MATNR = IT_MARC-MATNR AND EBELN IN S_EBELN.
    ENDIF.

    LOOP AT IT_MARA INTO WA_MARA.
      WA_FIN-MATNR = WA_MARA-MATNR.
      WA_FIN-ERSDA = WA_MARA-ERSDA.
      WA_FIN-MTART = WA_MARA-MTART.

      CLEAR WA_MARC.
      READ TABLE IT_MARC INTO WA_MARC WITH KEY MATNR = WA_MARA-MATNR.
      IF SY-SUBRC EQ 0.
        WA_FIN-WERKS = WA_MARC-WERKS.
      ENDIF.

      CLEAR WA_EKPO.
      READ TABLE IT_EKPO INTO WA_EKPO WITH KEY MATNR = WA_MARA-MATNR.
      IF SY-SUBRC EQ 0..
        WA_FIN-EBELN = WA_EKPO-EBELN.
      ENDIF.

      APPEND WA_FIN TO IT_FIN.
      CLEAR WA_FIN.
    ENDLOOP.





  ELSE.

    SELECT MATNR WERKS FROM MARC INTO TABLE IT_MARC WHERE WERKS IN S_WERKS AND MATNR IN S_MATNR.
*    IF SY-SUBRC EQ 0.
*      SORT  IT_MARC BY WERKS.
*    ENDIF.



    IF IT_MARC[] IS NOT INITIAL.
      SELECT MATNR ERSDA MTART FROM MARA INTO TABLE IT_MARA FOR ALL ENTRIES IN IT_MARC WHERE MATNR = IT_MARC-MATNR.
        IF SY-SUBRC EQ 0.
        SORT IT_MARA BY MATNR.
        ENDIF.
        ENDIF.


        IF IT_MARA[] IS NOT INITIAL.
        SELECT EBELN MATNR FROM EKPO INTO TABLE IT_EKPO FOR ALL ENTRIES IN IT_MARA WHERE MATNR = IT_MARA-MATNR.
    ENDIF.

 LOOP AT IT_MARA INTO WA_MARA.
      WA_FIN-MATNR = WA_MARA-MATNR.
      WA_FIN-ERSDA = WA_MARA-ERSDA.
      WA_FIN-MTART = WA_MARA-MTART.

      CLEAR WA_MARC.
      READ TABLE IT_MARC INTO WA_MARC WITH KEY MATNR = WA_MARA-MATNR.
      IF SY-SUBRC EQ 0.
        WA_FIN-WERKS = WA_MARC-WERKS.
      ENDIF.

      CLEAR WA_EKPO.
      READ TABLE IT_EKPO INTO WA_EKPO WITH KEY MATNR = WA_MARA-MATNR.
      IF SY-SUBRC EQ 0..
        WA_FIN-EBELN = WA_EKPO-EBELN.
      ENDIF.

      APPEND WA_FIN TO IT_FIN.
      CLEAR WA_FIN.
    ENDLOOP.





    ENDIF.


LOOP AT IT_FIN INTO WA_FIN.

WRITE:/1 WA_FIN-MATNR,
       20 WA_FIN-ERSDA,
       40 WA_FIN-MTART,
       50 WA_FIN-WERKS,
       70 WA_FIN-EBELN.
ENDLOOP.