*&---------------------------------------------------------------------*
*& Report  Y37_THREE_TABLE_SD
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Y37_THREE_TABLE_SD NO STANDARD PAGE HEADING LINE-COUNT 300 LINE-SIZE 300 MESSAGE-ID zrv.


TABLES: LIKP, LIPS, MAKT.

TYPES: BEGIN OF TY_LIKP,
       VBELN TYPE VBELN_VL,
       LFDAT TYPE LFDAT_V,
       END OF TY_LIKP.


DATA: IT_LIKP TYPE STANDARD TABLE OF TY_LIKP,
      WA_LIKP TYPE TY_LIKP.

TYPES: BEGIN OF TY_LIPS,
       VBELN TYPE VBELN_VL,
       POSNR TYPE POSNR_VL,
       LGORT TYPE LGORT_D,
       MATNR TYPE MATNR,
       END OF TY_LIPS.


DATA: IT_LIPS TYPE STANDARD TABLE OF TY_LIPS,
      WA_LIPS TYPE TY_LIPS.

TYPES: BEGIN OF TY_MAKT,
       MATNR TYPE MATNR,
       MAKTX TYPE MAKTX,
       END OF TY_MAKT.

DATA: IT_MAKT TYPE STANDARD TABLE OF TY_MAKT,
      WA_MAKT TYPE TY_MAKT.

TYPES: BEGIN OF TY_FIN,
       VBELN TYPE VBELN_VL,
       LFDAT TYPE LFDAT_V,
       POSNR TYPE POSNR_VL,
       LGORT TYPE LGORT_D,
       MATNR TYPE MATNR,
       MAKTX TYPE MAKTX,
       END OF TY_FIN.

DATA: IT_FIN TYPE STANDARD TABLE OF TY_FIN,
      WA_FIN TYPE TY_FIN.


DATA: P_VBELN TYPE VBELN_VL,
      P_LFDAT TYPE LFDAT_V,
      P_MATNR TYPE MATNR,
      P_LGORT TYPE LGORT_D.

INITIALIZATION.

CLEAR: WA_LIKP, WA_LIPS, WA_MAKT.

REFRESH: IT_LIKP, IT_LIPS, IT_MAKT.

SELECTION-SCREEN BEGIN OF BLOCK B1 WITH FRAME TITLE TEXT-001.
  SELECT-OPTIONS: VBELN FOR LIKP-VBELN,
                  LFDAT FOR LIKP-LFDAT,
                  MATNR FOR LIPS-MATNR,
                  LGORT FOR LIPS-LGORT.
SELECTION-SCREEN END OF BLOCK B1.

AT SELECTION-SCREEN.

  IF VBELN AND LFDAT AND MATNR AND LGORT IS INITIAL .
     MESSAGE 'PLEASE FILL ANY PARAMETER' TYPE 'E'.
  ENDIF.

IF VBELN IS NOT INITIAL.
SELECT SINGLE VBELN FROM LIKP INTO P_VBELN WHERE VBELN IN VBELN.
  IF SY-SUBRC NE 0.
    MESSAGE 'INCORRECT DELIVERY NO' TYPE 'I'.
  ENDIF.
ENDIF.

IF LFDAT IS NOT INITIAL.
SELECT SINGLE LFDAT FROM LIKP INTO P_LFDAT WHERE LFDAT IN LFDAT.
  IF SY-SUBRC NE 0.
    MESSAGE 'INCORRECT DELIVERY DATE' TYPE 'I'.
  ENDIF.
ENDIF.

IF MATNR IS NOT INITIAL.
SELECT SINGLE MATNR FROM mara INTO P_MATNR WHERE MATNR IN MATNR.
  IF SY-SUBRC NE 0.
    MESSAGE 'INCORRECT MATERIAL NO' TYPE 'I'.
  ENDIF.
ENDIF.

IF LGORT IS NOT INITIAL.
SELECT SINGLE LGORT FROM mard INTO P_LGORT WHERE LGORT IN LGORT.
  IF SY-SUBRC NE 0.
    MESSAGE 'INCORRECT LOCATION' TYPE 'I'.
  ENDIF.
ENDIF.



TOP-OF-PAGE.
WRITE:/20 'DATA FROM THREE TABLES : SD REPORT'.
SKIP.
WRITE:/1 'DELIVERY NO',
       20 'DELIVERY DATE',
       40 'DELIVERY ITEM',
       60 'LOCATION',
       80 'MATERIAL NO',
       100 'DESCRIPTION'.


START-OF-SELECTION.

SELECT VBELN LFDAT FROM LIKP INTO TABLE IT_LIKP WHERE VBELN IN VBELN AND LFDAT IN LFDAT.
  IF SY-SUBRC EQ 0.
     SORT IT_LIKP BY VBELN.
  ENDIF.

  IF NOT IT_LIKP IS INITIAL.
      SELECT VBELN POSNR LGORT MATNR FROM LIPS INTO TABLE IT_LIPS FOR ALL ENTRIES IN IT_LIKP
                                                             WHERE VBELN = IT_LIKP-VBELN
                                                                   AND LGORT IN LGORT
                                                                   AND MATNR IN MATNR.
  IF SY-SUBRC EQ 0.
     SORT IT_LIPS BY VBELN.
  ENDIF.
  ENDIF.

  IF NOT IT_LIPS IS INITIAL.
       SELECT MATNR MAKTX FROM MAKT INTO TABLE IT_MAKT FOR ALL ENTRIES IN IT_LIPS
         WHERE MATNR = IT_LIPS-MATNR.
         IF SY-SUBRC EQ 0.
           SORT IT_MAKT BY MATNR.
         ENDIF.
  ENDIF.

  LOOP AT IT_LIPS INTO WA_LIPS.
    WA_FIN-VBELN = WA_LIPS-VBELN.
     WA_FIN-POSNR = WA_LIPS-POSNR.
     WA_FIN-LGORT = WA_LIPS-LGORT.
      WA_FIN-MATNR = WA_LIPS-MATNR.

     CLEAR: WA_LIKP.

     READ TABLE IT_LIKP INTO WA_LIKP WITH KEY VBELN = WA_LIPS-VBELN.
     IF SY-SUBRC EQ 0.
       WA_FIN-LFDAT = WA_LIKP-LFDAT.

     ENDIF.
     CLEAR: WA_MAKT.


     READ TABLE IT_MAKT INTO WA_MAKT WITH KEY MATNR = WA_LIPS-MATNR.
     IF SY-SUBRC EQ 0.
        WA_FIN-MAKTX = WA_MAKT-MAKTX.
     ENDIF.
     APPEND WA_FIN TO IT_FIN.
     CLEAR: WA_FIN.
     ENDLOOP.









     LOOP AT IT_FIN INTO WA_FIN.
       WRITE:/1 WA_FIN-VBELN,
              20 WA_FIN-LFDAT,
              40 WA_FIN-POSNR,
              60 WA_FIN-LGORT,
              80 WA_FIN-MATNR,
              100 WA_FIN-MAKTX.
       ENDLOOP.