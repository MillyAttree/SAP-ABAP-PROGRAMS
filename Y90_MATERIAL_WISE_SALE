*&---------------------------------------------------------------------*
*& Report  Y90_MATERIAL_WISE_SALE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT Y90_MATERIAL_WISE_SALE.

TYPE-POOLS: SLIS.

TABLES : VBRK, VBRP, KNA1, MAKT.

TYPES : BEGIN OF TY_VBRK,
        VBELN TYPE VBRK-VBELN,
        FKART TYPE VBRK-FKART,
        FKDAT TYPE VBRK-FKDAT,
        KUNRG TYPE VBRK-KUNRG,
        KUNAG TYPE VBRK-KUNAG,
        XBLNR TYPE VBRK-XBLNR, " Reference
        VKORG TYPE VBRK-VKORG,
        VTWEG TYPE VBRK-VTWEG,
        END OF TY_VBRK.

DATA :  IT_VBRK  TYPE STANDARD TABLE OF TY_VBRK,
        WA_VBRK  TYPE TY_VBRK.

TYPES : BEGIN OF TY_VBRP,
        VBELN TYPE VBRP-VBELN,
        POSNR TYPE VBRP-POSNR,
        FKLMG TYPE VBRP-FKLMG,
        MATNR TYPE VBRP-MATNR,
        SPART TYPE VBRP-SPART,
        END OF TY_VBRP.

DATA :  IT_VBRP  TYPE STANDARD TABLE OF TY_VBRP,
        WA_VBRP  TYPE TY_VBRP.

TYPES : BEGIN OF TY_FIN,
        KUNRG TYPE VBRK-KUNRG,
        MATNR TYPE VBRP-MATNR,
        VBELN TYPE VBRK-VBELN,
        FKART TYPE VBRK-FKART,
        FKDAT TYPE VBRK-FKDAT,
        KUNAG TYPE VBRK-KUNAG,
        XBLNR TYPE VBRK-XBLNR,
        POSNR TYPE VBRP-POSNR,
        FKLMG TYPE VBRP-FKLMG,
        END OF TY_FIN.

DATA :  IT_FIN  TYPE STANDARD TABLE OF TY_FIN,
        WA_FIN  TYPE TY_FIN.

TYPES : BEGIN OF TY_FINAL,
        KUNRG TYPE VBRK-KUNRG,
        NAME1 TYPE KNA1-NAME1,
        ORT01 TYPE KNA1-ORT01,
        MAKTX TYPE MAKT-MAKTX,
        TOT   TYPE VBRP-FKLMG,
        MATNR TYPE VBRP-MATNR,
        END OF TY_FINAL.

DATA :  IT_FINAL  TYPE STANDARD TABLE OF TY_FINAL,
        WA_FINAL  TYPE TY_FINAL.

DATA: FIELDCATALOG TYPE SLIS_T_FIELDCAT_ALV WITH HEADER LINE,
      GD_TAB_GROUP TYPE SLIS_T_SP_GROUP_ALV,
      GD_LAYOUT    TYPE SLIS_LAYOUT_ALV,
      GD_REPID     LIKE SY-REPID.

DATA : MONTH   TYPE C LENGTH 2,
       ADD_QTY TYPE VBRP-FKLMG,
       SUB_QTY TYPE VBRP-FKLMG,
       TOT     TYPE VBRP-FKLMG.


SELECTION-SCREEN BEGIN OF BLOCK B1 WITH FRAME TITLE TEXT-001.

SELECT-OPTIONS : S_KUNRG FOR  VBRK-KUNRG.
SELECT-OPTIONS : S_VKORG FOR  VBRK-VKORG DEFAULT '1000'.
SELECT-OPTIONS : S_FKDAT FOR  VBRK-FKDAT.
SELECT-OPTIONS : S_VTWEG FOR  VBRK-VTWEG.
SELECT-OPTIONS : S_MATNR FOR  VBRP-MATNR.
SELECT-OPTIONS : S_SPART FOR  VBRP-SPART.
SELECTION-SCREEN END OF BLOCK B1.


  SELECTION-SCREEN BEGIN OF BLOCK B2 WITH FRAME TITLE TEXT-004.

  SELECTION-SCREEN BEGIN OF LINE.
  PARAMETERS : R1 RADIOBUTTON GROUP G1 DEFAULT 'X'.
  SELECTION-SCREEN COMMENT 5(20) TEXT-002 FOR FIELD R1.
  SELECTION-SCREEN END OF LINE.

  SELECTION-SCREEN BEGIN OF LINE.
  PARAMETERS : R2 RADIOBUTTON GROUP G1.
  SELECTION-SCREEN COMMENT 5(20) TEXT-003 FOR FIELD R2.
  SELECTION-SCREEN END OF LINE.

  SELECTION-SCREEN END OF BLOCK B2.

 AT SELECTION-SCREEN OUTPUT.

  LOOP AT SCREEN.

    IF R1 EQ 'X' AND SCREEN-GROUP1 EQ 'S2'.
      SCREEN-INPUT = 0.
      MODIFY SCREEN.
    ENDIF.

    IF R2 EQ 'X' AND SCREEN-GROUP1 EQ 'S1'.
      SCREEN-INPUT = 0.
      MODIFY SCREEN.
    ENDIF.

  ENDLOOP.

START-OF-SELECTION.

  PERFORM DATA.
  PERFORM DISP.
  PERFORM ALV.

FORM DATA .

  LOOP AT S_FKDAT.
    IF S_FKDAT-HIGH - S_FKDAT-LOW GT 365.
      MESSAGE 'PLASE FILL ONE YEAR DATA ONLY' TYPE 'E'.
    ENDIF.
  ENDLOOP.

  SELECT VBELN
         FKART
         FKDAT
         KUNRG
         KUNAG
         XBLNR
         VKORG
         VTWEG FROM VBRK INTO TABLE IT_VBRK WHERE KUNRG IN S_KUNRG
                                      AND   VKORG IN S_VKORG
                                      AND   FKDAT IN S_FKDAT
*                                      AND   FKART IN S_FKART
                                      AND   VTWEG IN S_VTWEG.

    IF NOT IT_VBRK IS INITIAL.
     SELECT VBELN
            POSNR
            FKLMG
            MATNR
            SPART FROM VBRP INTO TABLE IT_VBRP
            FOR ALL ENTRIES IN IT_VBRK WHERE VBELN EQ IT_VBRK-VBELN
                                         AND MATNR IN S_MATNR
                                         AND SPART IN S_SPART .


    ENDIF.

 LOOP AT IT_VBRP INTO WA_VBRP.
 WA_FIN-VBELN = WA_VBRP-VBELN.
 WA_FIN-POSNR = WA_VBRP-POSNR.
 WA_FIN-FKLMG = WA_VBRP-FKLMG.
 WA_FIN-MATNR = WA_VBRP-MATNR.

 CLEAR WA_VBRK.
 READ TABLE IT_VBRK INTO WA_VBRK WITH KEY VBELN = WA_VBRP-VBELN.
 WA_FIN-FKART = WA_VBRK-FKART.
 WA_FIN-KUNRG = WA_VBRK-KUNRG.
 WA_FIN-KUNAG = WA_VBRK-KUNAG.
 WA_FIN-FKART = WA_VBRK-FKART.
 APPEND WA_FIN TO IT_FIN.
 CLEAR WA_FIN.
 ENDLOOP.

 SORT IT_FIN BY MATNR KUNRG .

 If R1 EQ 'X'.

 LOOP AT IT_FIN INTO WA_FIN.

 AT NEW MATNR.
 AT NEW KUNRG.
 TOT = 0.
 ENDAT.
 ENDAT.

 IF WA_FIN-FKART = 'S1' OR WA_FIN-FKART = 'ZSCR' OR WA_FIN-FKART = 'ZRE'.
 TOT = TOT - WA_FIN-FKLMG.
 ELSE.
 TOT = TOT + WA_FIN-FKLMG.
 ENDIF.

  AT END OF MATNR.
  WA_FINAL-MATNR = WA_FIN-MATNR.

  SELECT SINGLE MAKTX FROM MAKT INTO (MAKT-MAKTX) WHERE MATNR = WA_FIN-MATNR.
  WA_FINAL-MAKTX = MAKT-MAKTX.

  AT END OF KUNRG.

  WA_FINAL-TOT   = TOT / 1000.
  WA_FINAL-KUNRG = WA_FIN-KUNRG.

  SELECT SINGLE NAME1 ORT01 FROM KNA1 INTO (KNA1-NAME1,KNA1-ORT01) WHERE KUNNR = WA_FIN-KUNRG.
  WA_FINAL-NAME1 = KNA1-NAME1.
  WA_FINAl-ORT01 = KNA1-ORT01.

  APPEND WA_FINAL TO IT_FINAL.
  ENDAT.
  ENDAT.
  CLEAR WA_FINAL.
 ENDLOOP.


 ELSEIF R2 EQ 'X'.

 LOOP AT IT_FIN INTO WA_FIN.

 AT NEW MATNR.
 TOT = 0.
 ENDAT.

 IF WA_FIN-FKART = 'S1' OR WA_FIN-FKART = 'ZSCR' OR WA_FIN-FKART = 'ZRE'.
 TOT = TOT - WA_FIN-FKLMG.
 ELSE.
 TOT = TOT + WA_FIN-FKLMG.
 ENDIF.

  AT END OF MATNR.
  WA_FINAL-MATNR = WA_FIN-MATNR.

  SELECT SINGLE MAKTX FROM MAKT INTO (MAKT-MAKTX) WHERE MATNR = WA_FIN-MATNR.
  WA_FINAL-MAKTX = MAKT-MAKTX.
  WA_FINAL-TOT   = TOT / 1000.

  COLLECT WA_FINAL INTO IT_FINAL.
  ENDAT.

  CLEAR WA_FINAL.
 ENDLOOP.

 ENDIF.
ENDFORM.

FORM DISP .

If R1 EQ 'X'.
  FIELDCATALOG-FIELDNAME   = 'MATNR'.
  FIELDCATALOG-SELTEXT_M   = 'MAT NO.'.
  FIELDCATALOG-OUTPUTLEN   =  15.
  FIELDCATALOG-NO_ZERO     =  'X'.
  APPEND FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'MAKTX'.
  FIELDCATALOG-SELTEXT_M   = 'DESCRIPTION'.
  FIELDCATALOG-OUTPUTLEN   =  35.
  FIELDCATALOG-NO_ZERO     =  'X'.
  APPEND FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'KUNRG'.
  FIELDCATALOG-SELTEXT_M   = 'CUSTOMER'.
  FIELDCATALOG-OUTPUTLEN   =  15.
  FIELDCATALOG-NO_ZERO     =  'X'.
  APPEND FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'NAME1'.
  FIELDCATALOG-SELTEXT_M   = 'NAME'.
  FIELDCATALOG-OUTPUTLEN   =  30.
  FIELDCATALOG-NO_ZERO     =  'X'.
  APPEND FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'ORT01'.
  FIELDCATALOG-SELTEXT_M   = 'CITY'.
  FIELDCATALOG-OUTPUTLEN   =  30.
  FIELDCATALOG-NO_ZERO     =  'X'.
  APPEND FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'TOT'.
  FIELDCATALOG-SELTEXT_M   = 'TOT'.
  FIELDCATALOG-OUTPUTLEN   =  15.
  FIELDCATALOG-NO_ZERO     =  'X'.
  APPEND FIELDCATALOG.
  CLEAR  FIELDCATALOG.

ELSEIF R2 EQ 'X'.

  FIELDCATALOG-FIELDNAME   = 'MATNR'.
  FIELDCATALOG-SELTEXT_M   = 'MAT NO.'.
  FIELDCATALOG-OUTPUTLEN   =  15.
  FIELDCATALOG-NO_ZERO     =  'X'.
  APPEND FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'MAKTX'.
  FIELDCATALOG-SELTEXT_M   = 'DESCRIPTION'.
  FIELDCATALOG-OUTPUTLEN   =  35.
  FIELDCATALOG-NO_ZERO     =  'X'.
  APPEND FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'TOT'.
  FIELDCATALOG-SELTEXT_M   = 'TOT'.
  FIELDCATALOG-OUTPUTLEN   =  15.
  FIELDCATALOG-NO_ZERO     =  'X'.
  APPEND FIELDCATALOG.
  CLEAR  FIELDCATALOG.

ENDIF.

  GD_LAYOUT-NO_INPUT          = 'X'.
  GD_LAYOUT-COLWIDTH_OPTIMIZE = 'X'.
  GD_LAYOUT-TOTALS_TEXT       = 'TOTALS'(201).
  GD_LAYOUT-ZEBRA             = 'X'.


ENDFORM.

FORM ALV .

  GD_REPID = SY-REPID.
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
*      I_BACKGROUND_ID        = 'ALV_BACKGROUND'
      I_CALLBACK_PROGRAM     = GD_REPID
*      I_CALLBACK_TOP_OF_PAGE = 'TOP-OF-PAGE'  "SEE FORM
      IS_LAYOUT              = GD_LAYOUT
      IT_FIELDCAT            = FIELDCATALOG[]
*     IT_SORT                = IT_SORTCAT
*     IT_SPECIAL_GROUPS      = GD_TABGROUP
*     IT_EVENTS              = GT_XEVENTS
      I_SAVE                 = 'X'
*     IS_VARIANT             = Z_TEMPLATE
    TABLES
      T_OUTTAB               = IT_FINAL
    EXCEPTIONS
      PROGRAM_ERROR          = 1
      OTHERS                 = 2.
  IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

ENDFORM.

