*&---------------------------------------------------------------------*
*& Report  Y37_HUPACK
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Y37_HUPACK NO STANDARD PAGE HEADING LINE-COUNT 100(10) LINE-SIZE 300 MESSAGE-ID ZRV.

TABLES: ZHUPACK, ZHUTO , ZMATENT , T001L , USR02.


TYPES: BEGIN OF TY_HP,
       EXIDV TYPE EXIDV,
       BID TYPE ZBID,
       LOTNO TYPE ZLOT2,
       MATNR TYPE MATNR,
       TRANS LIKE ZHUTO-TRANS,
       END OF TY_HP.

DATA : IT_HP TYPE STANDARD TABLE OF TY_HP,
       WA_HP TYPE TY_HP.


TYPES: BEGIN OF TY_HU,
       EXIDV TYPE EXIDV,
       MATNR TYPE MATNR,
       TRANS TYPE ZSNO,
       LOTNO TYPE ZLOT,
       END OF TY_HU.

DATA: IT_HU TYPE STANDARD TABLE OF TY_HU,
      WA_HU TYPE TY_HU.


TYPES: BEGIN OF TY_MA,

       PERF TYPE ZPERF,
       LOTNO TYPE ZLOT2,
       SNO TYPE ZSNO,
       MATNR TYPE MATNR,
       END OF TY_MA.

DATA: IT_MA TYPE STANDARD TABLE OF TY_MA,
      WA_MA TYPE TY_MA.

TYPES: BEGIN OF TY_VEKP,
       VENUM TYPE VENUM,
      EXIDV TYPE EXIDV,
      ERDAT TYPE ERDAT,
      ERUHR TYPE ERZET,
      END OF TY_VEKP.


DATA: IT_VEKP TYPE STANDARD TABLE OF TY_VEKP,
      WA_VEKP TYPE TY_VEKP.

TYPES:BEGIN OF TY_VEPO,
      VENUM TYPE VENUM,
      MATNR TYPE MATNR,
      WERKS TYPE WERKS_D,
      LGORT TYPE LGORT_D,
      END OF TY_VEPO.

DATA: IT_VEPO TYPE STANDARD TABLE OF TY_VEPO,
      WA_VEPO TYPE TY_VEPO.


TYPES: BEGIN OF TY_FINAL,
        EXIDV TYPE EXIDV,
       BID TYPE ZBID,
       LOTNO TYPE ZLOT2,
       MATNR TYPE MATNR,
       TRANS TYPE ZSNO,
       PERF TYPE ZPERF,
      SNO TYPE ZSNO,
      VENUM TYPE VENUM,
*      EXIDV TYPE EXIDV,
      ERDAT TYPE ERDAT,
      ERUHR TYPE ERZET,
      WERKS TYPE WERKS_D,
      LGORT TYPE LGORT_D,
      END OF TY_FINAL.

DATA: IT_FINAL TYPE STANDARD TABLE OF TY_FINAL,
      WA_FINAL TYPE TY_FINAL.

DATA: GV_TABIX TYPE SY-TABIX.


DATA: P_EXIDV TYPE EXIDV.
DATA:P_MATNR TYPE MATNR.
DATA: P_BID TYPE ZBID.
DATA: P_LOT TYPE ZLOT.
DATA: P_TRANS TYPE TRANS.

INITIALIZATION.

  SELECTION-SCREEN BEGIN OF BLOCK B1 WITH FRAME TITLE TEXT-001.
  SELECT-OPTIONS: S_EXIDV FOR ZHUPACK-EXIDV,
               S_MATNR FOR ZHUPACK-MATNR,
                S_BID FOR ZHUPACK-BID MATCHCODE OBJECT ZBID,
                S_LGORT FOR T001L-LGORT,
                S_LOT    FOR ZHUPACK-LOTNO,
                S_TRANS  FOR ZHUTO-TRANS MATCHCODE OBJECT ZTRANS,
                S_USER FOR USR02-BNAME,
                S_DATE FOR SY-DATUM.

  SELECTION-SCREEN END OF BLOCK B1.

AT SELECTION-SCREEN.

  IF S_EXIDV AND S_MATNR AND S_BID AND S_LOT AND S_TRANS IS INITIAL.
    MESSAGE 'PLEASE FILL ANY PARAMETER' TYPE 'E'.
  ENDIF.

  IF S_EXIDV IS NOT INITIAL.
    SELECT SINGLE EXIDV FROM ZHUPACK INTO P_EXIDV WHERE EXIDV IN S_EXIDV.
    IF SY-SUBRC NE 0.
      MESSAGE 'INNCORRECT HU ID' TYPE 'I'.
    ENDIF.
  ENDIF.

  IF S_MATNR IS NOT INITIAL.
    SELECT SINGLE MATNR FROM ZHUPACK INTO P_MATNR WHERE MATNR IN S_MATNR.
    IF SY-SUBRC NE 0.
      MESSAGE 'INNCORRECT MATERIAL ' TYPE 'I'.
    ENDIF.
  ENDIF.

  IF S_BID IS NOT INITIAL.
    SELECT SINGLE BID FROM ZHUPACK INTO P_BID WHERE BID IN S_BID.
    IF SY-SUBRC NE 0.
      MESSAGE 'INNCORRECT BUNDLE ID' TYPE 'I'.
    ENDIF.
  ENDIF.

  IF S_LOT IS NOT INITIAL.
    SELECT SINGLE LOTNO FROM ZHUPACK INTO P_LOT WHERE LOTNO IN S_LOT.
    IF SY-SUBRC NE 0.
      MESSAGE 'INNCORRECT LOTNO' TYPE 'I'.
    ENDIF.
  ENDIF.

  IF S_TRANS IS NOT INITIAL.
    SELECT SINGLE TRANS FROM ZHUTO INTO P_TRANS WHERE TRANS IN S_TRANS.
    IF SY-SUBRC NE 0.
      MESSAGE 'INNCORRECT TRANS ID' TYPE 'I'.
      STOP.
    ENDIF.
  ENDIF.


TOP-OF-PAGE.

  WRITE:/ SY-ULINE(220),
          /1 SY-VLINE,
          45 'DATA FROM HU TABLES',
          220 SY-VLINE,
          / SY-ULINE(220),
          /1 SY-VLINE,
          2 'EXTERNAL HU ID',
          20 SY-VLINE,
          22 'BUNDLE ID',
          40 SY-VLINE,
          42 'LOT NO',
          60 SY-VLINE,
          62 'MATERIAL NO',
          80 SY-VLINE,
          82 'TRANS ID',
          100 SY-VLINE,
          102 'PERFORMA INVOICE',
          120 SY-VLINE,
          122 'SERIAL NO',
          140 SY-VLINE,
          142 'HU NO.',
          160 SY-VLINE,
          162 'ENTRY TIME',
          180 SY-VLINE,
          182 'PLANT',
          200 SY-VLINE,
          202 'LOCATION',
          220 SY-VLINE,
          / SY-ULINE(220).



START-OF-SELECTION.


  IF S_BID IS NOT INITIAL.

    LOOP AT S_BID.

      CLEAR GV_TABIX .
      GV_TABIX  = SY-TABIX.
      IF S_BID-LOW IS NOT INITIAL.

        CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
          EXPORTING
            INPUT  = S_BID-LOW
          IMPORTING
            OUTPUT = S_BID-LOW.

        MODIFY S_BID INDEX GV_TABIX  .
      ENDIF.

      IF S_BID-HIGH IS NOT INITIAL.
        CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
          EXPORTING
            INPUT  = S_BID-HIGH
          IMPORTING
            OUTPUT = S_BID-HIGH.

        MODIFY S_BID INDEX GV_TABIX .
      ENDIF.
    ENDLOOP.
  ENDIF.


************************************************************

  IF S_TRANS IS INITIAL.
    SELECT EXIDV
           BID
           LOTNO
           MATNR
           FROM ZHUPACK INTO CORRESPONDING FIELDS OF TABLE IT_HP
                  WHERE EXIDV  IN S_EXIDV
                  AND MATNR IN S_MATNR
                  AND BID IN  S_BID
                  AND LOTNO IN  S_LOT.

    IF IT_HP IS NOT INITIAL.
      SELECT EXIDV
          MATNR
          TRANS
          FROM ZHUTO INTO CORRESPONDING FIELDS OF TABLE IT_HU
        FOR ALL ENTRIES IN IT_HP WHERE EXIDV = IT_HP-EXIDV.
    ENDIF.

    IF IT_HP IS NOT INITIAL.
      SELECT MATNR
       PERF
       LOTNO
       SNO
       FROM ZMATENT INTO CORRESPONDING FIELDS OF TABLE IT_MA
        FOR ALL ENTRIES IN IT_HP WHERE LOTNO = IT_HP-LOTNO.
    ENDIF.


      IF IT_HP IS NOT INITIAL .
         SELECT VENUM
                EXIDV
                ERDAT
                ERUHR FROM VEKP INTO TABLE IT_VEKP FOR ALL ENTRIES IN IT_HP
           WHERE EXIDV = IT_HP-EXIDV.

      ENDIF.

      IF IT_VEKP IS NOT INITIAL.
          SELECT VENUM
                 MATNR
                 WERKS
                 LGORT FROM VEPO INTO TABLE IT_VEPO FOR ALL ENTRIES IN IT_VEKP
            WHERE VENUM = IT_VEKP-VENUM.

      ENDIF.


    LOOP AT IT_HP INTO WA_HP.
      WA_FINAL-EXIDV = WA_HP-EXIDV.
      WA_FINAL-BID = WA_HP-BID.
      WA_FINAL-LOTNO = WA_HP-LOTNO.
      WA_FINAL-MATNR = WA_HP-MATNR.
*    WA_FINAL-TRANS = WA_HU-TRANS.
      CLEAR WA_HU.

      READ TABLE IT_HU INTO WA_HU WITH KEY EXIDV = WA_HP-EXIDV.
      IF SY-SUBRC EQ 0.
*      WA_FINAL-BID = WA_HP-BID.
*      WA_FINAL-LOTNO = WA_HP-LOTNO.
        WA_FINAL-TRANS = WA_HU-TRANS.
      ENDIF.
      CLEAR WA_MA.

      READ TABLE IT_MA INTO WA_MA WITH KEY LOTNO = WA_HP-LOTNO.
      IF SY-SUBRC EQ 0.
        WA_FINAL-PERF = WA_MA-PERF.
        WA_FINAL-LOTNO = WA_MA-LOTNO.
        WA_FINAL-SNO = WA_MA-SNO.
      ENDIF.

      APPEND WA_FINAL TO IT_FINAL.
      CLEAR WA_FINAL.
    ENDLOOP.


  ELSE.



    SELECT EXIDV MATNR TRANS LOTNO FROM ZHUTO INTO TABLE IT_HU WHERE TRANS IN S_TRANS
                  AND EXIDV  IN S_EXIDV
                  AND MATNR IN S_MATNR
                  AND LOTNO IN  S_LOT.
    .

    IF IT_HU[] IS NOT INITIAL.

      SELECT EXIDV
             BID
             LOTNO
             MATNR

             FROM ZHUPACK INTO CORRESPONDING FIELDS OF TABLE IT_HP
             FOR ALL ENTRIES IN IT_HU WHERE EXIDV = IT_HU-EXIDV.

    ENDIF.


    IF IT_HP[] IS NOT INITIAL.
      SELECT MATNR
             PERF
             LOTNO
             SNO
             FROM ZMATENT INTO CORRESPONDING FIELDS OF TABLE IT_MA
             FOR ALL ENTRIES IN IT_HP WHERE LOTNO = IT_HP-LOTNO.
    ENDIF.


      IF IT_HP IS NOT INITIAL .
         SELECT VENUM
                EXIDV
                ERDAT
                ERUHR FROM VEKP INTO TABLE IT_VEKP FOR ALL ENTRIES IN IT_HP
           WHERE EXIDV = IT_HP-EXIDV.

      ENDIF.

      IF IT_VEKP IS NOT INITIAL.
          SELECT VENUM
                 MATNR
                 WERKS
                 LGORT FROM VEPO INTO TABLE IT_VEPO FOR ALL ENTRIES IN IT_VEKP
            WHERE VENUM = IT_VEKP-VENUM.

      ENDIF.

    LOOP AT IT_HP INTO WA_HP.
      WA_FINAL-EXIDV = WA_HP-EXIDV.
      WA_FINAL-BID = WA_HP-BID.
      WA_FINAL-LOTNO = WA_HP-LOTNO.
      WA_FINAL-MATNR = WA_HP-MATNR.
*    WA_FINAL-TRANS = WA_HU-TRANS.

      CLEAR WA_HU.

      READ TABLE IT_HU INTO WA_HU WITH KEY EXIDV = WA_HP-EXIDV.
      IF SY-SUBRC EQ 0.
*      WA_FINAL-BID = WA_HP-BID.
*      WA_FINAL-LOTNO = WA_HP-LOTNO.
        WA_FINAL-MATNR = WA_HU-MATNR.
        WA_FINAL-TRANS = WA_HU-TRANS.
      ENDIF.
      CLEAR WA_MA.

      READ TABLE IT_MA INTO WA_MA WITH KEY LOTNO = WA_HP-LOTNO.
      IF SY-SUBRC EQ 0.
        WA_FINAL-PERF = WA_MA-PERF.
        WA_FINAL-LOTNO = WA_MA-LOTNO.
        WA_FINAL-SNO = WA_MA-SNO.
      ENDIF.

      APPEND WA_FINAL TO IT_FINAL.
      CLEAR WA_FINAL.
    ENDLOOP.
  ENDIF.



LOOP AT  IT_FINAL INTO WA_FINAL.
    CLEAR GV_TABIX.
    GV_TABIX = SY-TABIX.

    READ TABLE IT_VEKP INTO WA_VEKP WITH KEY EXIDV = WA_FINAL-EXIDV.
    IF SY-SUBRC EQ 0.
    MOVE WA_VEKP-VENUM TO WA_FINAL-VENUM.
    MOVE : WA_VEKP-ERDAT TO WA_FINAL-ERDAT,
          WA_VEKP-ERUHR TO WA_FINAL-ERUHR.
       MODIFY IT_FINAL FROM WA_FINAL.
      ENDIF.
     CLEAR WA_VEPO.

     READ TABLE IT_VEPO INTO WA_VEPO WITH KEY VENUM = WA_VEKP-VENUM.
     IF SY-SUBRC EQ 0.
     MOVE: WA_VEPO-WERKS TO WA_FINAL-WERKS,
          WA_VEPO-LGORT TO WA_FINAL-LGORT.
    MODIFY IT_FINAL FROM WA_FINAL.
    ENDIF.

ENDLOOP.







  LOOP AT IT_FINAL INTO WA_FINAL.

    WRITE:/1 SY-VLINE,
                2 WA_FINAL-EXIDV,
                20 SY-VLINE,
                22 WA_FINAL-BID,
                40 SY-VLINE,
                42 WA_FINAL-LOTNO,
                60 SY-VLINE,
                62 WA_FINAL-MATNR,
                80 SY-VLINE,
                82 WA_FINAL-TRANS,
                100 SY-VLINE,
                102 WA_FINAL-PERF,
                120 SY-VLINE,
                122 WA_FINAL-SNO,
                140 SY-VLINE,
                142 WA_FINAL-VENUM,
                160 SY-VLINE,
                162 WA_FINAL-ERUHR,
                180 SY-VLINE,
                182 WA_FINAL-WERKS,
                200 SY-VLINE,
                202 WA_FINAL-LGORT,
                220 SY-VLINE,
                 / SY-ULINE(220).

  ENDLOOP.