*&---------------------------------------------------------------------*
*& Report  Y90_PRQ
*& Developed by Milly Sharma
*&---------------------------------------------------------------------*
*& Dated 12.12.2017
*&
*&---------------------------------------------------------------------*
REPORT Y90_PRQ.

TABLES : EBAN , EKET ,EKKO, EKPO , LFA1, MAKT, MARD, STXH, T023T.

TYPE-POOLS: SLIS.

DATA : MATNR TYPE MATNR.
DATA: G_REPID             LIKE SY-REPID,
      GS_PRINT            TYPE SLIS_PRINT_ALV,
      GT_LIST_TOP_OF_PAGE TYPE SLIS_T_LISTHEADER,
      GT_EVENTS           TYPE SLIS_T_EVENT,
      GT_SORT             TYPE SLIS_T_SORTINFO_ALV,
      Gd_LAYOUT           TYPE SLIS_LAYOUT_ALV,
      GT_FIELDCAT         TYPE SLIS_T_FIELDCAT_ALV,
      GT_VARIANT          LIKE DISVARIANT,
      FIELDCAT_LN         LIKE LINE OF GT_FIELDCAT,
      COL_POS             TYPE I.

TYPES : BEGIN OF TY_EBAN,
        BANFN LIKE EBAN-BANFN,
        BNFPO LIKE EBAN-BNFPO,
        LOEKZ LIKE EBAN-LOEKZ,
        EKGRP LIKE EBAN-EKGRP,  " PUR GROUP
        AFNAM LIKE EBAN-AFNAM,  " REQUISITIONER
        TXZ01 LIKE EBAN-TXZ01,  " SHORT TEXT
        MATNR LIKE EBAN-MATNR,
        WERKS LIKE EBAN-WERKS,
        LGORT LIKE EBAN-LGORT,
        MATKL LIKE EBAN-MATKL,
        MENGE LIKE EBAN-MENGE,
        MEINS LIKE EBAN-MEINS,
        BADAT LIKE EBAN-BADAT,  " PRQ DATE
        EBELN LIKE EBAN-EBELN,
        EBELP LIKE EBAN-EBELP,
        RLWRT LIKE EBAN-RLWRT,   " VALUE
*        BEDAT LIKE EBAN-BEDAT,   " PO DATE
        END OF TY_EBAN.

DATA : IT_EBAN TYPE STANDARD TABLE OF TY_EBAN,
       WA_EBAN TYPE TY_EBAN.

TYPES : BEGIN OF TY_EKET,
        EBELN LIKE EKET-EBELN,
        EBELP LIKE EKET-EBELP,
        ETENR LIKE EKET-ETENR,
        WEMNG LIKE EKET-WEMNG, " GR QTY
        EINDT LIKE EKET-EINDT, " SHEDULE DATE
        END OF TY_EKET.

DATA : IT_EKET TYPE STANDARD TABLE OF TY_EKET,
       WA_EKET TYPE TY_EKET.

TYPES : BEGIN OF TY_MARD,
        MATNR LIKE MARD-MATNR,
        WERKS LIKE MARD-WERKS,
        LGORT LIKE MARD-LGORT,
        LABST LIKE MARD-LABST,
        END OF TY_MARD.

DATA : IT_MARD TYPE STANDARD TABLE OF TY_MARD,
       WA_MARD TYPE TY_MARD.

*********** ITEM TEXT VARIABLE******
TYPES : BEGIN OF LTEX,
          TEMP LIKE STXH-TDNAME,
        END OF LTEX.

DATA : IT_LTEX TYPE STANDARD TABLE OF LTEX,
       WA_LTEX TYPE LTEX.

TYPES : BEGIN OF TY_STXH,                       "TO RETRIEVE ITEM TEXT
          TDOBJECT LIKE STXH-TDOBJECT,
          TDNAME   LIKE STXH-TDNAME,
          TDID     LIKE STXH-TDID,
          BANFN    LIKE EBAN-BANFN,
          BNFPO    LIKE EBAN-BNFPO,
          TEXT     TYPE STRING,
        END OF TY_STXH.


DATA : IT_STXH TYPE STANDARD TABLE OF TY_STXH,
       WA_STXH TYPE TY_STXH.

DATA: SYPRINDEX TYPE I VALUE 1.

DATA :TEXT1 TYPE STRING,                      "TO STORE ITEM TEXT
      TEXT2 TYPE STRING,
      TEXT3 TYPE STRING,
      TEXT4 TYPE STRING,
      TEXT5 TYPE STRING,
      TEXT6 TYPE STRING,
      TEXT7 TYPE STRING,
      TEXT8 TYPE STRING.

DATA :IT_LINE LIKE STANDARD TABLE OF TLINE,
      WA_LINE LIKE LINE OF IT_LINE.
***********END OF ITEM TEXT VARIABLE******


TYPES : BEGIN OF TY_FIN,
        BANFN LIKE EBAN-BANFN,
        BNFPO LIKE EBAN-BNFPO,
        EKGRP LIKE EBAN-EKGRP,  " PUR GROUP
        AFNAM LIKE EBAN-AFNAM,  " REQUISITIONER
        LTEX1 TYPE STRING,      " ITEM TEXT
        WGBEZ LIKE T023T-WGBEZ,
        MATNR LIKE EBAN-MATNR,
        WERKS LIKE EBAN-WERKS,
        LGORT LIKE EBAN-LGORT,
        MATKL LIKE EBAN-MATKL,
        MENGE LIKE EBAN-MENGE,
        MEINS LIKE EBAN-MEINS,
        BADAT LIKE EBAN-BADAT,
        EBELN LIKE EBAN-EBELN,
        EBELP LIKE EBAN-EBELP,
        RLWRT LIKE EBAN-RLWRT,   " VALUE
        ETENR LIKE EKET-ETENR,
        WEMNG LIKE EKET-WEMNG, " GR QTY
        LIFNR LIKE EKKO-LIFNR,
        NAME1 LIKE LFA1-NAME1,
        ORT01 LIKE LFA1-ORT01,
        EINDT LIKE EKET-EINDT,
        MAKTX LIKE MAKT-MAKTX,
        LABST LIKE MARD-LABST,
        MWSKZ LIKE EKPO-MWSKZ,
        NETWR LIKE EKPO-NETWR,
        P_QTY LIKE EKPO-MENGE,
        P_UOM LIKE EKPO-MEINS,
        PENDING LIKE EKPO-MENGE,
        END OF TY_FIN.

DATA : IT_FIN TYPE STANDARD TABLE OF TY_FIN,
       WA_FIN TYPE TY_FIN.

DATA : MAKTX LIKE MAKT-MAKTX,
       NAME1 LIKE LFA1-NAME1,
       ORT01 LIKE LFA1-ORT01,
       LIFNR LIKE EKKO-LIFNR,
       EBELN LIKE EKPO-EBELN,
       AEDAT LIKE EKPO-AEDAT,
       MWSKZ LIKE EKPO-MWSKZ,
       NETWR LIKE EKPO-NETWR,
       MENGE LIKE EKPO-MENGE,
       MEINS LIKE EKPO-MEINS,
       PENDING LIKE EKPO-MENGE,
       WGBEZ LIKE T023T-WGBEZ.



INITIALIZATION.
  G_REPID = SY-REPID.

START-OF-SELECTION.
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF BLOCK V-1 WITH FRAME TITLE TEXT-025.
SELECT-OPTIONS : V_BANFN FOR EBAN-BANFN.
SELECT-OPTIONS : V_MATNR FOR EBAN-MATNR.
SELECT-OPTIONS : V_MATKL FOR EBAN-MATKL.
SELECT-OPTIONS : V_AFNAM FOR EBAN-AFNAM.
SELECT-OPTIONS : V_WERKS FOR EBAN-WERKS DEFAULT '1000' OBLIGATORY.
SELECT-OPTIONS : V_EKGRP FOR EBAN-EKGRP .
SELECT-OPTIONS : V_DATE  FOR EBAN-BADAT OBLIGATORY.
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN END OF BLOCK V-1.
SELECTION-SCREEN SKIP 1.


  SELECTION-SCREEN BEGIN OF BLOCK B2 WITH FRAME TITLE TEXT-004.

  SELECTION-SCREEN BEGIN OF LINE.
  PARAMETERS : R1 RADIOBUTTON GROUP G1 DEFAULT 'X'.
  SELECTION-SCREEN COMMENT 5(20) TEXT-002 FOR FIELD R1.
  SELECTION-SCREEN END OF LINE.

  SELECTION-SCREEN BEGIN OF LINE.
  PARAMETERS : R2 RADIOBUTTON GROUP G1.
  SELECTION-SCREEN COMMENT 5(20) TEXT-003 FOR FIELD R2.
  SELECTION-SCREEN END OF LINE.

  SELECTION-SCREEN END OF BLOCK B2.

AT SELECTION-SCREEN OUTPUT.

  LOOP AT SCREEN.

    IF R1 EQ 'X' AND SCREEN-GROUP1 EQ 'S2'.
      SCREEN-INPUT = 0.
      MODIFY SCREEN.
    ENDIF.

    IF R2 EQ 'X' AND SCREEN-GROUP1 EQ 'S1'.
      SCREEN-INPUT = 0.
      MODIFY SCREEN.
    ENDIF.

  ENDLOOP.


START-OF-SELECTION.
  PERFORM DATA.
  PERFORM DISP.
  PERFORM EVENTTAB_BUILD CHANGING GT_EVENTS.
  PERFORM ALV.
*  PERFORM TOP_OF_PAGE.


FORM DATA.


  SELECT  BANFN
          BNFPO
          LOEKZ
          EKGRP
          AFNAM
          TXZ01
          MATNR
          WERKS
          LGORT
          MATKL
          MENGE
          MEINS
          BADAT
          EBELN
          EBELP
          RLWRT

    FROM EBAN INTO TABLE IT_EBAN WHERE BANFN IN V_BANFN AND
                                       MATNR IN V_MATNR AND
                                       MATKL IN V_MATKL AND
                                       AFNAM IN V_AFNAM AND
                                       WERKS IN V_WERKS AND
                                       EKGRP IN V_EKGRP AND
                                       BADAT IN V_DATE  AND
                                       LOEKZ NE 'X'.


    IF SY-SUBRC EQ 0.
      SORT IT_EBAN BY BANFN.
    ENDIF.

    IF IT_EBAN IS NOT INITIAL.

    SELECT  MATNR
            WERKS
            LGORT
            LABST FROM MARD INTO TABLE IT_MARD
                  FOR ALL ENTRIES IN IT_EBAN
                  WHERE MATNR EQ IT_EBAN-MATNR
                  AND   LGORT EQ IT_EBAN-LGORT
                  AND   WERKS EQ IT_EBAN-WERKS.


      SELECT EBELN
             EBELP
             ETENR
             WEMNG
             EINDT
        FROM EKET INTO TABLE IT_EKET FOR ALL ENTRIES IN IT_EBAN WHERE EBELN = IT_EBAN-EBELN AND
                                                                      EBELP = IT_EBAN-EBELP.
    ENDIF.

       IF SY-SUBRC EQ 0.
         SORT IT_EKET BY EBELN EBELP.
       ENDIF.



********************** GET ITEM TEXT *******************************
  IF IT_EBAN[] IS NOT INITIAL.
    LOOP AT IT_EBAN INTO WA_EBAN.
      CONCATENATE WA_EBAN-BANFN WA_EBAN-BNFPO INTO WA_LTEX-TEMP.
      APPEND WA_LTEX TO IT_LTEX.
*      MODIFY IT_EKPO FROM WA_EKPO.
      CLEAR: WA_EBAN.
    ENDLOOP.

    SELECT TDOBJECT
           TDNAME
           TDID FROM STXH
      INTO TABLE  IT_STXH
      FOR ALL ENTRIES IN IT_LTEX WHERE TDOBJECT = 'EBAN'
      AND TDNAME =  IT_LTEX-TEMP.

    LOOP AT IT_STXH INTO WA_STXH.

      CALL FUNCTION 'READ_TEXT'
        EXPORTING
          CLIENT   = SY-MANDT
          ID       = WA_STXH-TDID
          LANGUAGE = SY-LANGU
          NAME     = WA_STXH-TDNAME
          OBJECT   = WA_STXH-TDOBJECT
        TABLES
          LINES    = IT_LINE.
      IF SY-SUBRC <> 0.
      ENDIF.

      LOOP AT IT_LINE INTO WA_LINE.
        IF WA_STXH-TEXT IS INITIAL.
          CONCATENATE WA_LINE-TDLINE '' INTO WA_STXH-TEXT SEPARATED BY SPACE.
        ELSE.
          CONCATENATE WA_STXH-TEXT WA_LINE-TDLINE INTO WA_STXH-TEXT SEPARATED BY SPACE.
        ENDIF.
        CONDENSE WA_STXH-TEXT.
        CLEAR: WA_LINE.
      ENDLOOP.
      REFRESH IT_LINE.
      WA_STXH-BANFN = WA_STXH-TDNAME+0(10).
      WA_STXH-BNFPO = WA_STXH-TDNAME+10(5).
      MODIFY IT_STXH FROM WA_STXH TRANSPORTING TEXT BANFN BNFPO.
      CLEAR: WA_STXH.
    ENDLOOP.
  ENDIF.


  IF R1 EQ 'X'.


  LOOP AT IT_EBAN INTO WA_EBAN.
    CLEAR : LFA1-NAME1, LFA1-ORT01, MAKT-MAKTX, EKKO-LIFNR, EKPO-EBELN, EKPO-MWSKZ, EKPO-NETWR, EKPO-MENGE, PENDING, EKPO-AEDAT, MATNR, EKPO-MEINS.
    SELECT SINGLE MAKTX FROM MAKT INTO (MAKT-MAKTX) WHERE MATNR = WA_EBAN-MATNR.
    SELECT SINGLE WGBEZ FROM T023T INTO (T023T-WGBEZ) WHERE MATKL = WA_EBAN-MATKL.

    SELECT SINGLE MAX( AEDAT ) MATNR FROM EKPO INTO (EKPO-AEDAT,MATNR) WHERE MATNR = WA_EBAN-MATNR GROUP BY MATNR.

    SELECT SINGLE  EBELN MWSKZ NETWR MENGE MEINS MATNR FROM EKPO INTO (EKPO-EBELN,EKPO-MWSKZ,EKPO-NETWR,EKPO-MENGE,EKPO-MEINS,MATNR) WHERE MATNR = WA_EBAN-MATNR
    AND AEDAT EQ EKPO-AEDAT.

    WA_FIN-BANFN = WA_EBAN-BANFN.
    WA_FIN-BNFPO = WA_EBAN-BNFPO.
    WA_FIN-AFNAM = WA_EBAN-AFNAM.
    WA_FIN-MATNR = WA_EBAN-MATNR.
    WA_FIN-LGORT = WA_EBAN-LGORT.
    WA_FIN-MATKL = WA_EBAN-MATKL.
    WA_FIN-MENGE = WA_EBAN-MENGE.
    WA_FIN-MEINS = WA_EBAN-MEINS.
    WA_FIN-BADAT = WA_EBAN-BADAT.
    WA_FIN-EBELN = EKPO-EBELN.
    WA_FIN-EBELP = WA_EBAN-EBELP.
    WA_FIN-RLWRT = WA_EBAN-RLWRT.
    WA_FIN-MAKTX = MAKT-MAKTX.
    WA_FIN-MWSKZ = EKPO-MWSKZ.
    WA_FIN-NETWR = EKPO-NETWR.
    WA_FIN-P_QTY = EKPO-MENGE.
    WA_FIN-P_UOM = EKPO-MEINS.
    WA_FIN-WGBEZ = T023T-WGBEZ.

      CLEAR WA_STXH.
      READ TABLE IT_STXH INTO WA_STXH WITH KEY BANFN = WA_EBAN-BANFN
                                               BNFPO = WA_EBAN-BNFPO.
      WA_FIN-LTEX1 = WA_STXH-TEXT.

    CLEAR WA_MARD.
    READ TABLE IT_MARD INTO WA_MARD WITH KEY MATNR = WA_EBAN-MATNR
                                             LGORT = WA_EBAN-LGORT.
    IF SY-SUBRC EQ 0.
    WA_FIN-LABST = WA_MARD-LABST.
    ENDIF.

   SELECT SINGLE LIFNR FROM EKKO INTO (EKKO-LIFNR) WHERE EBELN = EKPO-EBELN.
   IF SY-SUBRC EQ 0.
   WA_FIN-LIFNR = EKKO-LIFNR.
   ENDIF.

    SELECT SINGLE NAME1 ORT01 FROM LFA1 INTO (LFA1-NAME1,LFA1-ORT01) WHERE LIFNR = EKKO-LIFNR.
    WA_FIN-NAME1 = LFA1-NAME1.
    WA_FIN-ORT01 = LFA1-ORT01.

    CLEAR WA_EKET.
    READ TABLE IT_EKET INTO WA_EKET WITH KEY EBELN = WA_EBAN-EBELN
                                             EBELP = WA_EBAN-EBELP.
    IF SY-SUBRC EQ 0.
     WA_FIN-WEMNG = WA_EKET-WEMNG.
     WA_FIN-EINDT = WA_EKET-EINDT.
    ENDIF.

    PENDING = WA_EBAN-MENGE - WA_EKET-WEMNG.
    WA_FIN-PENDING = PENDING.

     IF WA_EKET-WEMNG LT WA_EBAN-MENGE OR WA_EKET-WEMNG IS INITIAL.
    APPEND WA_FIN TO IT_FIN.
    ENDIF.
    CLEAR  WA_FIN.

  ENDLOOP.

  ELSEIF R2 EQ 'X'.


  LOOP AT IT_EBAN INTO WA_EBAN.
    CLEAR : LFA1-NAME1, LFA1-ORT01, MAKT-MAKTX, EKKO-LIFNR, EKPO-EBELN, EKPO-MWSKZ, EKPO-NETWR, EKPO-MENGE, PENDING, EKPO-AEDAT, MATNR, EKPO-MEINS..
    SELECT SINGLE MAKTX FROM MAKT INTO (MAKT-MAKTX) WHERE MATNR = WA_EBAN-MATNR.
    SELECT SINGLE WGBEZ FROM T023T INTO (T023T-WGBEZ) WHERE MATKL = WA_EBAN-MATKL.
    SELECT SINGLE MAX( AEDAT ) MATNR FROM EKPO INTO (EKPO-AEDAT,MATNR) WHERE MATNR = WA_EBAN-MATNR GROUP BY MATNR.

    SELECT SINGLE  EBELN MWSKZ NETWR MENGE MEINS MATNR FROM EKPO INTO (EKPO-EBELN,EKPO-MWSKZ,EKPO-NETWR,EKPO-MENGE,EKPO-MEINS,MATNR)
    WHERE MATNR = WA_EBAN-MATNR AND AEDAT EQ EKPO-AEDAT.

    WA_FIN-BANFN = WA_EBAN-BANFN.
    WA_FIN-BNFPO = WA_EBAN-BNFPO.
    WA_FIN-AFNAM = WA_EBAN-AFNAM.
    WA_FIN-MATNR = WA_EBAN-MATNR.
    WA_FIN-LGORT = WA_EBAN-LGORT.
    WA_FIN-MATKL = WA_EBAN-MATKL.
    WA_FIN-MENGE = WA_EBAN-MENGE.
    WA_FIN-MEINS = WA_EBAN-MEINS.
    WA_FIN-BADAT = WA_EBAN-BADAT.
    WA_FIN-EBELN = EKPO-EBELN.
    WA_FIN-EBELP = WA_EBAN-EBELP.
    WA_FIN-RLWRT = WA_EBAN-RLWRT.
    WA_FIN-MAKTX = MAKT-MAKTX.
    WA_FIN-MWSKZ = EKPO-MWSKZ.
    WA_FIN-NETWR = EKPO-NETWR.
    WA_FIN-P_QTY = EKPO-MENGE.
    WA_FIN-P_UOM = EKPO-MEINS.
    WA_FIN-WGBEZ = T023T-WGBEZ.

      CLEAR WA_STXH.
      READ TABLE IT_STXH INTO WA_STXH WITH KEY BANFN = WA_EBAN-BANFN
                                               BNFPO = WA_EBAN-BNFPO.
      WA_FIN-LTEX1 = WA_STXH-TEXT.

    CLEAR WA_MARD.
    READ TABLE IT_MARD INTO WA_MARD WITH KEY MATNR = WA_EBAN-MATNR
                                             LGORT = WA_EBAN-LGORT.
    IF SY-SUBRC EQ 0.
    WA_FIN-LABST = WA_MARD-LABST.
    ENDIF.

   SELECT SINGLE LIFNR FROM EKKO INTO (EKKO-LIFNR) WHERE EBELN = EKPO-EBELN.
   IF SY-SUBRC EQ 0.
   WA_FIN-LIFNR = EKKO-LIFNR.
   ENDIF.

    SELECT SINGLE NAME1 ORT01 FROM LFA1 INTO (LFA1-NAME1,LFA1-ORT01) WHERE LIFNR = EKKO-LIFNR.
    WA_FIN-NAME1 = LFA1-NAME1.
    WA_FIN-ORT01 = LFA1-ORT01.

    CLEAR WA_EKET.
    READ TABLE IT_EKET INTO WA_EKET WITH KEY EBELN = WA_EBAN-EBELN
                                             EBELP = WA_EBAN-EBELP.
    IF SY-SUBRC EQ 0.
     WA_FIN-WEMNG = WA_EKET-WEMNG.
     WA_FIN-EINDT = WA_EKET-EINDT.
    ENDIF.

    PENDING = WA_EBAN-MENGE - WA_EKET-WEMNG.
    WA_FIN-PENDING = PENDING.

    APPEND WA_FIN TO IT_FIN.
    CLEAR  WA_FIN.
  ENDLOOP.
ENDIF.
ENDFORM.



AT LINE-SELECTION.
  SET PARAMETER ID 'BES' FIELD WA_FIN-EBELN.
  CALL TRANSACTION 'ME23N' AND SKIP FIRST SCREEN.

END-OF-SELECTION.


 FORM DISP.
  DATA: FIELDCAT_LN TYPE SLIS_FIELDCAT_ALV.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME   = 'BANFN'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L   = 'PRQ NO.'.
  FIELDCAT_LN-HOTSPOT = 'X'.
  FIELDCAT_LN-OUTPUTLEN   =  10.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME   = 'BNFPO'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L   = 'ITEM NO.'.
  FIELDCAT_LN-OUTPUTLEN   =  3.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME   = 'BADAT'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-HOTSPOT = ' '.
  FIELDCAT_LN-SELTEXT_L   = 'DATE.'.
  FIELDCAT_LN-OUTPUTLEN   =  10.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.


  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME = 'MATNR'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L = 'MAT NUMBER'.
  FIELDCAT_LN-OUTPUTLEN = 6.
  FIELDCAT_LN-NO_ZERO = 'X'.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME   = 'MAKTX'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L   = 'MATERIAL DESCRIPTION'.
  FIELDCAT_LN-OUTPUTLEN   =  20.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME   = 'LTEX1'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L   = 'ITEM TEXT'.
  FIELDCAT_LN-OUTPUTLEN   =  20.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME   = 'MENGE'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L   = 'QTY'.
  FIELDCAT_LN-OUTPUTLEN   =  10.
  FIELDCAT_LN-NO_ZERO     = 'X'.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME   = 'MEINS'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L   = 'UOM'.
  FIELDCAT_LN-OUTPUTLEN   =  3.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME   = 'WEMNG'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L   = 'DELIVERED QTY'.
  FIELDCAT_LN-OUTPUTLEN   =  10.
  FIELDCAT_LN-NO_ZERO     = 'X'.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME   = 'PENDING'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L   = 'PENDING QTY'.
  FIELDCAT_LN-OUTPUTLEN   =  10.
  FIELDCAT_LN-NO_ZERO     = 'X'.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME   = 'MATKL'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L   = 'MAT GROUP'.
  FIELDCAT_LN-OUTPUTLEN   =  10.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME   = 'WGBEZ'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L   = 'GROUP DESCRIPTION'.
  FIELDCAT_LN-OUTPUTLEN   =  10.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME   = 'LABST'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L   = 'CURRENT STOCK'.
  FIELDCAT_LN-OUTPUTLEN   =  10.
  FIELDCAT_LN-NO_ZERO     = 'X'.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME   = 'AFNAM'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L   = 'REQUISITIONER'.
  FIELDCAT_LN-OUTPUTLEN   =  20.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME   = ' EINDT'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L   = 'SHEDULE DATE'.
  FIELDCAT_LN-OUTPUTLEN   =  10.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME   = 'LGORT'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L   = 'STORAGE LOCATION'.
  FIELDCAT_LN-OUTPUTLEN   =  5.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME = 'EBELN'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L = 'PO NUMBER'.
  FIELDCAT_LN-HOTSPOT = 'X'.
  FIELDCAT_LN-OUTPUTLEN = 10.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME = 'LIFNR'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L = 'VENDOR NO'.
  FIELDCAT_LN-OUTPUTLEN = 8.
  FIELDCAT_LN-NO_ZERO = 'X'.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME = 'NAME1'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L = 'VENDOR NAME'.
  FIELDCAT_LN-OUTPUTLEN = 20.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME = 'ORT01'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L = 'VENDOR LOCATION'.
  FIELDCAT_LN-OUTPUTLEN = 10.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME   = 'MWSKZ'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L   = 'TAX CODE'.
  FIELDCAT_LN-OUTPUTLEN   =  5.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME   = 'P_QTY'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L   = 'LAST PO QTY'.
  FIELDCAT_LN-OUTPUTLEN   =  10.
  FIELDCAT_LN-NO_ZERO     = 'X'.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME   = 'P_UOM'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L   = 'PO UOM'.
  FIELDCAT_LN-OUTPUTLEN   =  5.
  FIELDCAT_LN-NO_ZERO     = 'X'.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

  CLEAR FIELDCAT_LN.
  FIELDCAT_LN-FIELDNAME   = 'NETWR'.
  FIELDCAT_LN-TABNAME = 'IT_FIN'.
  FIELDCAT_LN-NO_OUT = ' '.
  FIELDCAT_LN-SELTEXT_L   = 'LAST PO VALUE'.
  FIELDCAT_LN-OUTPUTLEN   =  10.
  FIELDCAT_LN-NO_ZERO     = 'X'.
  APPEND FIELDCAT_LN TO GT_FIELDCAT.

*  GD_LAYOUT-NO_INPUT          = 'X'.
*  GD_LAYOUT-COLWIDTH_OPTIMIZE = 'X'.
*  GD_LAYOUT-TOTALS_TEXT       = 'TOTALS'(201).
  GD_LAYOUT-ZEBRA             = 'X'.

 DATA: GS_SORT TYPE SLIS_SORTINFO_ALV.
  CLEAR GS_SORT.
  GS_SORT-FIELDNAME = 'EBELN'.
  GS_SORT-UP = 'X'.
  APPEND GS_SORT TO GT_SORT.
  CLEAR GS_SORT.
  GS_SORT-FIELDNAME = 'LIFNR'.
  GS_SORT-UP = 'X'.
  APPEND GS_SORT TO GT_SORT.

 ENDFORM.
FORM ALV.
* ABAP ALV GRID LIST VIEWER
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      I_CALLBACK_PROGRAM      = G_REPID
      I_CALLBACK_USER_COMMAND = 'FRM_ALV_USER_COMMAND'
*      I_CALLBACK_TOP_OF_PAGE  = 'TOP_OF_PAGE'
      I_STRUCTURE_NAME        = 'IT_FIN'
      IS_LAYOUT               = GD_LAYOUT
      IT_FIELDCAT             = GT_FIELDCAT[]
      I_DEFAULT               = 'X'
      I_SAVE                  = 'A'
      IS_VARIANT              = GT_VARIANT
    TABLES
      T_OUTTAB                = IT_FIN.
ENDFORM. "CALL_ALV
*&--------------------------------------------------------------------*
*& FORM EVENTTAB_BUILD
*&--------------------------------------------------------------------*
* HEADER FORM
FORM EVENTTAB_BUILD CHANGING LT_EVENTS TYPE SLIS_T_EVENT.
  CONSTANTS:
  GC_FORMNAME_TOP_OF_PAGE TYPE SLIS_FORMNAME VALUE 'TOP_OF_PAGE'.
  DATA: LS_EVENT TYPE SLIS_ALV_EVENT.
  CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
    EXPORTING
      I_LIST_TYPE = 0
    IMPORTING
      ET_EVENTS   = LT_EVENTS.
  READ TABLE LT_EVENTS WITH KEY NAME = SLIS_EV_TOP_OF_PAGE
    INTO LS_EVENT.
  IF SY-SUBRC = 0.
    MOVE GC_FORMNAME_TOP_OF_PAGE TO LS_EVENT-FORM.
    APPEND LS_EVENT TO LT_EVENTS.
  ENDIF.
ENDFORM. "EVENTTAB_BUILD
*&--------------------------------------------------------------------*
FORM END_OF_PAGE.
  WRITE AT (SY-LINSZ) SY-PAGNO CENTERED.
ENDFORM. "END_OF_PAGE
*&--------------------------------------------------------------------*
*& FORM FRM_ALV_USER_COMMAND
*&--------------------------------------------------------------------*
FORM FRM_ALV_USER_COMMAND USING UCOMM LIKE SY-UCOMM
SELFIELD TYPE SLIS_SELFIELD.
  CASE UCOMM.
    WHEN '&IC1'.
      IF SELFIELD-TABNAME = 'IT_FIN'.
        IF SELFIELD-FIELDNAME = 'EBELN'.
          READ TABLE IT_FIN INTO WA_FIN INDEX SELFIELD-TABINDEX.
          IF SY-SUBRC = 0.
            SET PARAMETER ID 'BES' FIELD WA_FIN-EBELN.
            CALL TRANSACTION 'ME23N' AND SKIP FIRST SCREEN.
          ENDIF.
        ENDIF.
      ENDIF.


      IF SELFIELD-TABNAME = 'IT_FIN'.
        IF SELFIELD-FIELDNAME = 'BANFN'.
          READ TABLE IT_FIN INTO WA_FIN INDEX SELFIELD-TABINDEX.
          IF SY-SUBRC = 0.
            SET PARAMETER ID 'BAN' FIELD WA_FIN-BANFN.
            CALL TRANSACTION 'ME53N' AND SKIP FIRST SCREEN.
          ENDIF.
        ENDIF.
      ENDIF.
  ENDCASE.
ENDFORM. "FRM_ALV_USER_COMMAND
                  "TOP-OF-PAGE

